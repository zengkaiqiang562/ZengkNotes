vim命令：
1. yw 复制一个单词
2. shift + > or < 缩进
3. ：+ num  跳转到指定行num
4. % 光标移动到括号（大，中，花括号）首，尾

5.缓冲区 ： arguments list 和 Buffer list
	
	1. arguments list  ：  1. ：args 查看集合
				2. ：n or ：N or ：（1-9）（n,N） 编辑上一个 or 下一个 or 上n个（下n个）

	2.arguments or buffer list 都适用：
				1. ：ls 查看集合 编号后有“#”是前一个文件，有“%a”是当前文件
				2. ：e# or ctrl + ^ 编辑上一个
				3. ：b+编号  编辑指定编号文件
				4. ：bn or ：bl  下一个or上一个 （elvis不适用）


6. cw 删除一个单词，并进入插入模式
7. cc 删除一行，并进入插入模式
8.  ：close 关闭分割窗口

9. 插入模式下 
	1. ctrl + p or ctrl + n  向上（下）搜索，补全一个单词
	2. ctrl + x + l  补全一行
	3. ctrl + x + f 补全文件名
	4. ctrl + y 将上一行对应列字符复制下来
	5. ctrl + e 将下一行对应列字符复制下来

10. 批量编辑
	普通模式下 ctrl + v 块选择 ，插入字符(shift+i)，快速按esc两次

11. 插入模式下，ctrl + o 执行一个普通模式的命令，执行完毕后回到插入模式，不用多次Esc。

12.查找
	1.*（*）搜索光标所在的单词
	2.g*(g#) 搜索包含光标所在单词的字符串
	3.f(F)x  向右（左）查找光标所在行的x字符，“;”继续向右查找，“,”继续向左查找

13.光标移动
	1. ^  移动光标到所在行的首个字符处
	2. `. 移动光标到最近一次的修改点
	3. '. 移动光标到最近一次修改点所在的行首
	4. '' 此命令相当有用，它移动光标到上一个标记处。比如用gd、*等查找到某个单词后，再输入此命令则回到上次停留的位置。

14.dw 删除光标所在的单词
15.D 删除光标所在行的从光标到行尾的内容
16. yfa 拷贝从当前光标到光标后面的第一个a字符之间的内容（y2fa 表示拷贝从当前光标到光标后面的第二个a字符之间的内容）

17.替换
   :s/aa/bb/g 将光标所在行出现的所有包含aa的字符串中的aa替换为bb。
   :s/\<aa\>/bb/g 将光标所在行出现的所有aa替换为bb，仅替换aa这个单词。
   :%s/aa/bb/g 将文档中出现的所有包含aa的字符串中的aa替换为bb。
   :12,23s/aa/bb/g 将从12行到23行中出现的所有包含aa的字符串中的aa替换为bb。
   :12,23s/^/#/ 将从12行到23行的行首加入#字符。

18. :set diff 此命令用于比较两个文件，可以用“:vsp filename”命令打开另一个文件，然后在每个文件窗口中输入此命令，就能看到效果了
19. :f或ctrl-g 显示目前编辑的文件名、是否经过修改及目前光标所在之位置。

20. :w 	将编辑的数据写入硬盘档案中(常用)
21. :w [filename] 	将编辑的数据储存成另一个档案（类似另存新档）
22. :n1,n2 w [filename] 	将 n1 到 n2 的内容储存成 filename 这个档案。

23. :! command 	暂时离开 vi 到指令列模式下执行 command 的显示结果！ (例如『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！)

24. :7,10d    删除7到10行


